<?php

namespace ZipkinBundle\RouteMapper;

use Symfony\Component\HttpFoundation\Request;

final class RouteMapper
{
    private const NOT_FOUND = 'not_found';

    /**
     * @var array|null
     */
    private $routes;

    private function __construct(array $routes = null)
    {
        $this->routes = $routes;
    }

    public static function createFromMap(array $routes)
    {
        return new self($routes);
    }

    /**
     * A NO-OP route mapper will return `null` for all routes.
     */
    public static function createAsNoop(): self
    {
        return new self();
    }

    /**
     * A cache based route mapper will get the cached routes mapping
     * from a cache file pre-generated by the CacheWarmer.
     */
    public static function createFromCache(string $cacheDir): self
    {
        $routes = @include CacheWarmer::buildOutputFilename($cacheDir);
        return new self($routes === false ? [] : $routes);
    }

    /**
     * mapToPath will return the route path from a request based on the declared
     * routes. If NO-OP, it will just return null, otherwise it will return either
     * the matched route or a not_found route name.
     */
    public function mapToPath(Request $request): ?string
    {
        if ($this->routes === null) {
            return null;
        }

        $routeName = $request->attributes->get('_route');

        if ($routeName === null || !\array_key_exists($routeName, $this->routes)) {
            return self::NOT_FOUND;
        }

        return $this->routes[$routeName];
    }
}
